{"version":3,"sources":["components/utilities/CONSTANTS.jsx","components/authentication/AuthenticationRoute.jsx","components/utilities/components/Feedback.jsx","components/utilities/components/FormikUIField.jsx","components/utilities/components/FormikUISelect.jsx","components/utilities/components/Loading.jsx","components/utilities/components/RouterUILink.jsx","components/utilities/components/UserInfoProvider.jsx","components/utilities/axios.jsx","components/utilities/authForms_validation_schema.jsx","components/utilities/roomForms_validation_schema.jsx","components/authentication/form_styles.jsx","components/authentication/Login.jsx","components/authentication/Register.jsx","components/lobby/room_styles.jsx","components/lobby/Room.jsx","components/lobby/RoomForm/create_room_form_styles.jsx","components/lobby/RoomForm/CreateRoomForm.jsx","components/lobby/RoomList.jsx","components/lobby/LobbyRoute.jsx","components/navigation_bar/navigation_bar_styles.jsx","components/navigation_bar/NavigationBar.jsx","components/video_room/video_room_styles.jsx","components/video_room/Video.jsx","components/video_room/VideoRoom.jsx","components/video_room/VideoRoomRoute.jsx","Routes.jsx","App.jsx","index.js"],"names":["BASE_API_URL","window","location","origin","AVAILABLE_PATHS","ALL_PATH_TITLES","AuthenticationRoute","props","Component","component","authenticationProps","restOfProps","render","routerProps","isUserLoggedIn","to","exact","redirectPath","Feedback","severity","feedbackMsg","isFeedbackOpen","closeFeedback","Snackbar","anchorOrigin","vertical","horizontal","open","autoHideDuration","onClose","Alert","FormikUIField","name","label","type","MUComponent","TextField","helperText","as","MaterialSelectUI","children","value","errorString","onChange","onBlur","FormControl","fullWidth","InputLabel","Select","FormHelperText","FormikUISelect","items","map","item","MenuItem","Loading","Container","style","textAlign","CircularProgress","RouterUILink","innerText","linkTo","Link","RouterLink","UserInfoContext","React","createContext","isDataArrived","userId","userFullName","UserInfoProvider","Provider","userData","csrftoken","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","getCookie","axiosInstance","axios","create","baseURL","timeout","headers","accept","Authorization","localStorage","getItem","getRoomsList","search","defaults","get","validateToken","token","post","refreshingAccessToken","access_token","then","response","status","catch","error","refresh_token","refresh","data","setItem","access","err","console","log","message","loginValidationSchema","yup","shape","email","required","password","registerValidationSchema","firstName","lastName","min","confirmation","oneOf","roomFormValidationSchema","title","description","typeOf","formStyles","theme","formPaper","margin","width","padding","spacing","borderRadius","breakpoints","up","fullName","display","formButton","color","transition","background","Login","state","serverErrors","onSubmitLoginForm","bind","this","history","authenticateUser","printFeedback","push","setState","Object","values","classes","Paper","className","elevation","initialValues","onSubmit","validationSchema","dirty","isValid","errors","touched","Typography","align","variant","index","Button","disabled","withStyles","passwordHelperText","Register","onSubmitRegisterForm","tokens","text","roomStyles","root","heading","fontSize","typography","pxToRem","flexBasis","flexShrink","secondaryHeading","palette","secondary","gridContainer","gap","gridItemA","gridItemB","gridItemC","enterBtn","Room","copyRoomUrl","databaseId","getElementById","select","execCommand","renderRoomType","roomTypeKeyWord","apiData","id","createdOn","roomId","user","deleteRoom","enterRoom","context","Accordion","AccordionSummary","expandIcon","AccordionDetails","fontWeight","gutterBottom","ButtonGroup","size","orientation","onClick","defaultValue","contextType","createRoomFormStyles","position","top","left","transform","createRoomBtn","CreateRoomForm","roomTypes","onRoomFormSubmit","multiline","rows","RoomList","a","resetForm","roomData","closeRoomForm","loadRooms","delete","res","isRoomFormOpen","roomListData","loadingRooms","Modal","disableAutoFocus","marginTop","Fragment","LobbyRoute","lobbyProps","navigationBarStyles","flexGrow","appBar","pageTitle","marginRight","backgroundColor","fade","common","white","marginLeft","searchIcon","height","pointerEvents","alignItems","justifyContent","inputRoot","inputInput","paddingLeft","transitions","menuButton","username","NavigationBar","changePageTitle","currentUrlPath","pathname","LOBBY_TITLE","LOGIN_TITLE","REGISTER_TITLE","match","handleMenuOpen","event","anchorEl","currentTarget","menuAction","menu","dataset","LOBBY_PATH","LOGIN_PATH","REGISTER_PATH","removeItem","showComponents","isComponentShown","componentDidMount","prevProps","openRoomForm","handleSearchChanges","menuItems","AppBar","Toolbar","InputBase","placeholder","input","Tooltip","IconButton","edge","transformOrigin","keepMounted","Boolean","data-menu","withRouter","videoRoomStyles","floatingButtons","zIndex","bottom","floatingButton","videoGrid","marginBottom","remoteVideoDiv","overflow","localVideoDiv","video","objectFit","userDetail","alert","Video","mouseHoverIn","isMouseHovering","mouseHoverOut","peer","user_id","on","stream","srcObject","videoDivClass","user_full_name","isLocalUser","opacity","onMouseOver","onMouseOut","autoPlay","muted","VideoRoom","muteVideo","getVideoTracks","enabled","isVideoMuted","muteAudio","getAudioTracks","isAudioMuted","leaveRoom","CreatePeer","currentUserId","otherUserId","currentUserStream","Peer","initiator","trickle","signal","websocket","send","JSON","stringify","from","offer","addPeer","receivedOffer","answer","sendSignalsToAll","peers","usersConnected","forEach","otherUser","peersEstablished","params","navigator","mediaDevices","isVideoRoomAccessible","WebSocket","protocol","host","onopen","contentLoading","onmessage","payload","parse","users_connected","getUserMedia","audio","find","eachUser","newPeersList","userPeer","newList","filter","destroy","componentWillUnmount","close","getTracks","track","stop","Fab","VideoRoomRoute","Routes","target","reason","jwt_decode","full_name","VIDEO_ROOM_PATH","navProps","basename","path","App","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.6a32eae0.chunk.js","sourcesContent":["export const BASE_API_URL = window.location.origin + \"/api/\";  //  Use this for if you wanna serve it Django\n// export const BASE_API_URL = \"http://127.0.0.1:8000/api/\";   // Use this for stand-alone app \nexport const webSocketUrl = () => {\n  let websocketProtocol;\n  if (window.location.protocol === \"https:\") {\n    websocketProtocol = \"wss://\";\n  } else {\n    websocketProtocol = \"ws://\";\n  }\n  return websocketProtocol + window.location.host + \"/video/\"; //  Use this for if you wanna serve it Django\n  // return websocketProtocol + \"127.0.0.1:8000/video/\";        // Use this for stand-alone app \n};\n\nexport const AVAILABLE_PATHS = {\n  LOBBY_PATH: \"/\",\n  LOGIN_PATH: \"/login\",\n  REGISTER_PATH: \"/register\",\n  VIDEO_ROOM_PATH: \"/video/:roomId\",\n};\n\nexport const ALL_PATH_TITLES = {\n  LOBBY_TITLE: \"Lobby\",\n  LOGIN_TITLE: \"Login\",\n  REGISTER_TITLE: \"Register\",\n  LOGOUT_TITLE: \"Logout\",\n};\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\n\nimport { AVAILABLE_PATHS } from \"../utilities/CONSTANTS\";\n\n// Custom Route for redirecting user to home if they are already authenticated\nfunction AuthenticationRoute(props) {\n  const { component: Component, authenticationProps, ...restOfProps } = props;\n  return (\n    <Route\n      {...restOfProps}\n      render={(routerProps) =>\n        !authenticationProps.isUserLoggedIn ? (\n          <Component\n            redirectPath={AVAILABLE_PATHS.LOBBY_PATH}\n            {...routerProps}\n            {...authenticationProps}\n          />\n        ) : (\n          <Redirect to={AVAILABLE_PATHS.LOBBY_PATH} exact />\n        )\n      }\n    />\n  );\n}\n\nexport default AuthenticationRoute;\n","import React from \"react\";\n\n// Material UI components\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport Alert from \"@material-ui/lab/Alert\";\n\nfunction Feedback(props) {\n  const { severity, feedbackMsg, isFeedbackOpen, closeFeedback } = props;\n  return (\n    <>\n      <Snackbar\n        anchorOrigin={{\n          vertical: \"top\",\n          horizontal: \"center\",\n        }}\n        open={isFeedbackOpen}\n        autoHideDuration={6000}\n        onClose={closeFeedback}\n      >\n        <Alert onClose={closeFeedback} severity={severity}>\n          {feedbackMsg}\n        </Alert>\n      </Snackbar>\n    </>\n  );\n}\n\nexport default Feedback;\n","import React from \"react\";\nimport { Field, ErrorMessage } from \"formik\";\n\n// Material UI components\nimport TextField from \"@material-ui/core/TextField\";\n\nfunction FormikUIField(props) {\n  const {\n    name,\n    label,\n    type = \"text\",\n    MUComponent = TextField,\n    ...restOfProps\n  } = props;\n  return (\n    <div>\n      <Field\n        name={name}\n        label={label}\n        type={type}\n        {...restOfProps}\n        helperText={<ErrorMessage name={name} />}\n        as={MUComponent}\n      />\n    </div>\n  );\n}\n\nexport default FormikUIField;\n","import React from \"react\";\nimport { Field, ErrorMessage } from \"formik\";\n\n// Material UI components\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\n\nfunction MaterialSelectUI(props) {\n  const { label, children, value, name, errorString, onChange, onBlur } = props;\n  return (\n    <FormControl fullWidth>\n      <InputLabel>{label}</InputLabel>\n      <Select value={value} name={name} onChange={onChange} onBlur={onBlur}>\n        {children}\n      </Select>\n      <FormHelperText>{errorString}</FormHelperText>\n    </FormControl>\n  );\n}\n\nfunction FormikUISelect(props) {\n  const { name, label, items = [] } = props;\n  return (\n    <Field\n      name={name}\n      label={label}\n      errorString={<ErrorMessage name={name} />}\n      as={MaterialSelectUI}\n    >\n      {items.map((item) => (\n        <MenuItem key={item.value} value={item.value}>\n          {item.label}\n        </MenuItem>\n      ))}\n    </Field>\n  );\n}\n\nexport default FormikUISelect;\n","import React from \"react\";\n\n// Material UI components\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Container from \"@material-ui/core/Container\";\n\nfunction Loading() {\n  return (\n    <Container style={{ textAlign: \"center\" }}>\n      <CircularProgress />\n    </Container>\n  );\n}\n\nexport default Loading;\n","import React from \"react\";\nimport { Link as RouterLink } from \"react-router-dom\";\n\n// Material UI components\nimport Link from \"@material-ui/core/Link\";\n\n// Router link component is modified with material ui\nfunction RouterUILink(props) {\n  const { innerText, linkTo } = props;\n  return (\n    <Link component={RouterLink} to={linkTo}>\n      {innerText}\n    </Link>\n  );\n}\n\nexport default RouterUILink;\n","import React from \"react\";\n\nexport const UserInfoContext = React.createContext({\n  isDataArrived: false,\n  userId: null,\n  userFullName: \"\",\n  isUserLoggedIn: false,\n});\n\nfunction UserInfoProvider(props) {\n  return (\n    <UserInfoContext.Provider value={props.userData}>\n      {props.children}\n    </UserInfoContext.Provider>\n  );\n}\n\nexport default UserInfoProvider;\n","import axios from \"axios\";\n\n// Utility functions, constants, objects...\nimport { BASE_API_URL } from \"./CONSTANTS\";\n\nfunction getCookie(name) {\n  let cookieValue = null;\n  if (document.cookie && document.cookie !== \"\") {\n    const cookies = document.cookie.split(\";\");\n    for (let i = 0; i < cookies.length; i++) {\n      const cookie = cookies[i].trim();\n      // Does this cookie string begin with the name we want?\n      if (cookie.substring(0, name.length + 1) === name + \"=\") {\n        cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n        break;\n      }\n    }\n  }\n  return cookieValue;\n}\nconst csrftoken = getCookie(\"csrftoken\");\n\nconst axiosInstance = axios.create({\n  baseURL: BASE_API_URL,\n  timeout: 5000,\n  headers: {\n    \"Content-Type\": \"application/json\",\n    accept: \"application/json\",\n    \"X-CSRFToken\": csrftoken,\n    Authorization: \"Bearer \" + localStorage.getItem(\"access_token\"),\n  },\n});\nexport default axiosInstance;\n\nexport const getRoomsList = (axiosInstance, search = \"\") => {\n  delete axiosInstance.defaults.headers[\"Authorization\"];\n\n  if (search !== \"\") {\n    return axiosInstance.get(`rooms/?search=${search}`);\n  }\n\n  return axiosInstance.get(\"rooms/\");\n};\n\nexport const validateToken = (axiosInstance, token) => {\n  return axiosInstance.post(\"token/verify/\", {\n    token: token,\n  });\n};\n\nexport const refreshingAccessToken = () => {\n  const access_token = localStorage.getItem(\"access_token\");\n  validateToken(axiosInstance, access_token)\n    .then((response) => {\n      if (response.status === 200) {\n        axiosInstance.defaults.headers[\"Authorization\"] =\n          \"Bearer \" + access_token;\n      }\n    })\n    .catch((error) => {\n      const refresh_token = localStorage.getItem(\"refresh_token\");\n      if (\n        (error.response.status === 400 || error.response.status === 401) &&\n        refresh_token\n      ) {\n        axiosInstance\n          .post(\"token/refresh/\", {\n            refresh: refresh_token,\n          })\n          .then(({ status, data }) => {\n            if (status === 200) {\n              localStorage.setItem(\"access_token\", data.access);\n              axiosInstance.defaults.headers[\"Authorization\"] =\n                \"Bearer \" + data.access;\n            }\n          })\n          .catch((err) => {\n            console.log(err.message);\n          });\n      }\n    });\n};\n","import * as yup from \"yup\";\n\n// Validations Schemas for authentication\n\nexport let loginValidationSchema = yup.object().shape({\n  email: yup.string().email().required(),\n  password: yup.string().required(),\n});\n\nexport let registerValidationSchema = yup.object().shape({\n  email: yup.string().email().required(),\n  firstName: yup.string().required().label(\"First Name\"),\n  lastName: yup.string().required().label(\"Last Name\"),\n  password: yup.string().min(8).required(),\n  confirmation: yup\n    .string()\n    .oneOf([yup.ref(\"password\"), null], \"Passwords must match\")\n    .required(),\n});\n","import * as yup from \"yup\";\n\nconst typeOf = [\"OTA\", \"IO\"];\nlet roomFormValidationSchema = yup.object().shape({\n  title: yup.string().required(),\n  description: yup.string(),\n  typeOf: yup.string().required().oneOf(typeOf),\n});\nexport default roomFormValidationSchema;\n","// Custom styling for authentication forms\nconst formStyles = (theme) => ({\n  formPaper: {\n    margin: \"2rem auto\",\n    width: \"80%\",\n    padding: theme.spacing(3),\n    textAlign: \"center\",\n    borderRadius: \"1rem\",\n    [theme.breakpoints.up(\"md\")]: { margin: \"4rem auto\", width: \"40%\" },\n  },\n  fullName: {\n    display: \"flex\",\n    \"flex-direction\": \"column\",\n    \"justify-content\": \"space-between\",\n    [theme.breakpoints.up(\"md\")]: {\n      \"flex-direction\": \"row\",\n      \"justify-content\": \"space-evenly\",\n    },\n  },\n  formButton: {\n    margin: \"1.5rem 0\",\n    color: \"#fff\",\n    \"background-image\":\n      \"linear-gradient(to right, rgba(46,49,146,1) 13%, rgba(27,255,255,1) 96%)\",\n\n    transition: \"0.5s\",\n    \"background-size\": \" 200% auto\",\n\n    \"&:hover\": {\n      \"background-position\": \"right center\",\n    },\n    \"&:disabled\": {\n      background: \"#829baf\",\n      color: \"#e3f2fd\",\n    },\n  },\n});\nexport default formStyles;\n","import React, { Component } from \"react\";\nimport { Formik, Form } from \"formik\";\n\n// Material UI components\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport Button from \"@material-ui/core/Button\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\n// Utility components, functions, constants, objects...\nimport {\n  FormikUIField,\n  loginValidationSchema,\n  axiosInstance,\n  RouterUILink,\n} from \"../utilities\";\nimport formStyles from \"./form_styles\";\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      serverErrors: \"\",\n    };\n    this.onSubmitLoginForm = this.onSubmitLoginForm.bind(this);\n  }\n\n  // Submission form\n  onSubmitLoginForm(data) {\n    const userData = {\n      email: data.email,\n      password: data.password,\n    };\n    const {\n      history,\n      redirectPath,\n      authenticateUser,\n      printFeedback,\n    } = this.props;\n\n    // Sends post requests\n    axiosInstance\n      .post(\"token/\", userData)\n      .then(({ data }) => {\n        // Tokens are added to headers upcoming requests\n        // And they stored in local storage\n        axiosInstance.defaults.headers[\"Authorization\"] =\n          \"Bearer \" + data.access;\n        localStorage.setItem(\"access_token\", data.access);\n        localStorage.setItem(\"refresh_token\", data.refresh);\n\n        // User is then authenticated and redirected to lobby with print feedback message\n        authenticateUser();\n        history.push(redirectPath);\n        printFeedback({ type: \"success\", feedbackMsg: \"You are logged in\" });\n      })\n      .catch((error) => {\n        console.log(error.message);\n\n        // Server error is set to state to display down in component\n        if (error.response) {\n          this.setState({\n            serverErrors: Object.values(error.response.data),\n          });\n        }\n      });\n  }\n\n  render() {\n    const { classes } = this.props;\n    let initialValues = {\n      email: \"\",\n      password: \"\",\n    };\n    return (\n      <Paper className={classes.formPaper} elevation={3}>\n        <Formik\n          initialValues={initialValues}\n          onSubmit={this.onSubmitLoginForm}\n          validationSchema={loginValidationSchema}\n        >\n          {({ dirty, isValid, errors, touched }) => (\n            <Form>\n              <Typography align=\"center\" variant=\"h3\">\n                Login\n              </Typography>\n\n              {/* Email */}\n              <FormikUIField\n                name=\"email\"\n                label=\"Email\"\n                type=\"email\"\n                fullWidth\n                required\n                error={errors.email && touched.email}\n              />\n\n              {/* Password */}\n              <FormikUIField\n                name=\"password\"\n                label=\"Password\"\n                type=\"password\"\n                fullWidth\n                required\n                error={errors.password && touched.password}\n              />\n\n              {/* Server side error */}\n              {this.state.serverErrors\n                ? this.state.serverErrors.map((error, index) => (\n                    <FormHelperText key={index} error>\n                      {error}\n                    </FormHelperText>\n                  ))\n                : null}\n\n              {/* Login Button */}\n              <Button\n                fullWidth\n                className={classes.formButton}\n                type=\"submit\"\n                variant=\"contained\"\n                color=\"primary\"\n                disabled={!dirty || !isValid}\n              >\n                Login\n              </Button>\n\n              {/* Link to registor page */}\n              <Typography display=\"block\" variant=\"caption\">\n                not a member?\n                <RouterUILink linkTo=\"/register\" innerText=\"Register\" />\n              </Typography>\n            </Form>\n          )}\n        </Formik>\n      </Paper>\n    );\n  }\n}\n\nexport default withStyles(formStyles)(Login);\n","import React, { Component } from \"react\";\nimport { Formik, Form } from \"formik\";\n\n// Material UI components\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport Button from \"@material-ui/core/Button\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\n// Utility components, functions, constants, objects...\nimport {\n  FormikUIField,\n  registerValidationSchema,\n  axiosInstance,\n  RouterUILink,\n} from \"../utilities\";\nimport formStyles from \"./form_styles\";\n\nconst passwordHelperText = [\n  \"Your password can’t be too similar to your other personal information.\",\n  \"Your password must contain at least 8 characters.\",\n  \"Your password can’t be a commonly used password. \",\n  \"Your password can’t be entirely numeric.\",\n];\n\nclass Register extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      serverErrors: \"\",\n    };\n    this.onSubmitRegisterForm = this.onSubmitRegisterForm.bind(this);\n  }\n\n  // Submission form\n  onSubmitRegisterForm(data) {\n    const userData = {\n      email: data.email,\n      firstName: data.firstName,\n      lastName: data.lastName,\n      password: data.password,\n    };\n    const {\n      history,\n      redirectPath,\n      authenticateUser,\n      printFeedback,\n    } = this.props;\n\n    // Sends post requests\n    axiosInstance\n      .post(\"user/create/\", userData)\n      .then(({ data: { tokens } }) => {\n        // Tokens are added to headers upcoming requests\n        // And they stored in local storage\n        axiosInstance.defaults.headers[\"Authorization\"] =\n          \"Bearer \" + tokens.access;\n        localStorage.setItem(\"access_token\", tokens.access);\n        localStorage.setItem(\"refresh_token\", tokens.refresh);\n\n        // User is then authenticated and redirected to lobby with print feedback message\n        authenticateUser();\n        history.push(redirectPath);\n        printFeedback({\n          type: \"success\",\n          feedbackMsg: \"You are registered and logged in\",\n        });\n      })\n      .catch((error) => {\n        console.log(error.message);\n\n        // Server error is set to state to display down in component\n        if (error.response) {\n          this.setState({\n            serverErrors: Object.values(error.response.data),\n          });\n        }\n      });\n  }\n\n  render() {\n    const { classes } = this.props;\n    let initialValues = {\n      firstName: \"\",\n      lastName: \"\",\n      email: \"\",\n      password: \"\",\n      confirmation: \"\",\n    };\n    return (\n      <Paper className={classes.formPaper} elevation={3}>\n        <Formik\n          initialValues={initialValues}\n          onSubmit={this.onSubmitRegisterForm}\n          validationSchema={registerValidationSchema}\n        >\n          {({ dirty, isValid, errors, touched }) => (\n            <Form>\n              <Typography align=\"center\" variant=\"h3\">\n                Register\n              </Typography>\n\n              <div className={classes.fullName}>\n                {/* First Name */}\n                <FormikUIField\n                  fullWidth\n                  name=\"firstName\"\n                  label=\"First Name\"\n                  type=\"text\"\n                  required\n                  error={errors.firstName && touched.firstName}\n                />\n\n                {/* Last Name */}\n                <FormikUIField\n                  fullWidth\n                  name=\"lastName\"\n                  label=\"Last Name\"\n                  type=\"text\"\n                  required\n                  error={errors.lastName && touched.lastName}\n                />\n              </div>\n\n              {/* Email */}\n              <FormikUIField\n                name=\"email\"\n                label=\"Email\"\n                type=\"email\"\n                fullWidth\n                required\n                error={errors.email && touched.email}\n              />\n              <FormikUIField\n                name=\"password\"\n                label=\"Password\"\n                type=\"password\"\n                fullWidth\n                required\n                error={errors.password && touched.password}\n              />\n              {passwordHelperText.map((text, index) => (\n                <FormHelperText key={index}>{text}</FormHelperText>\n              ))}\n\n              {/* Password */}\n              <FormikUIField\n                name=\"confirmation\"\n                label=\"Confirm Password\"\n                type=\"password\"\n                fullWidth\n                required\n                error={errors.confirmation && touched.confirmation}\n              />\n              <FormHelperText>\n                Enter the same password as before, for verification.\n              </FormHelperText>\n              {/* Server Errors */}\n              {this.state.serverErrors\n                ? this.state.serverErrors.map((error, index) => (\n                    <FormHelperText key={index} error>\n                      {error}\n                    </FormHelperText>\n                  ))\n                : null}\n\n              {/* Register Button */}\n              <Button\n                fullWidth\n                className={classes.formButton}\n                type=\"submit\"\n                variant=\"contained\"\n                color=\"primary\"\n                disabled={!dirty || !isValid}\n              >\n                Register\n              </Button>\n\n              {/* Link to Login page */}\n              <Typography display=\"block\" variant=\"caption\">\n                already have an account?\n                <RouterUILink linkTo=\"/login\" innerText=\"Log In\" />\n              </Typography>\n            </Form>\n          )}\n        </Formik>\n      </Paper>\n    );\n  }\n}\n\nexport default withStyles(formStyles)(Register);\n","// Custom room styles\nconst roomStyles = (theme) => ({\n  root: {\n    width: \"100%\",\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    flexBasis: \"33.33%\",\n    flexShrink: 0,\n  },\n  secondaryHeading: {\n    fontSize: theme.typography.pxToRem(15),\n    color: theme.palette.text.secondary,\n  },\n  gridContainer: {\n    width: \"100%\",\n    display: \"grid\",\n    \"grid-template-columns\": \"repeat(1, 1fr)\",\n    \"grid-template-rows\": \"auto\",\n    gap: \"1rem\",\n    \"justify-content\": \"center\",\n    \"grid-template-areas\": `\n    \"description\"\n    \"buttons\"\n    \"copy_btn\";`,\n\n    [theme.breakpoints.up(\"md\")]: {\n      \"grid-template-columns\": \"3fr, 1fr\",\n      \"grid-template-areas\": `\n    \"description buttons\"\n    \"copy_btn copy_btn\"`,\n    },\n  },\n  gridItemA: {\n    width: \"100%\",\n    \"grid-area\": \"description\",\n  },\n  gridItemB: {\n    width: \"100%\",\n    \"grid-area\": \"buttons\",\n  },\n  gridItemC: {\n    \"grid-area\": \"copy_btn\",\n  },\n\n  enterBtn: {\n    \"background-image\":\n      \"linear-gradient(to right, rgba(46,49,146,1) 13%, rgba(27,255,255,1) 96%)\",\n\n    transition: \"0.5s\",\n    \"background-size\": \" 200% auto\",\n\n    \"&:hover\": {\n      \"background-position\": \"right center\",\n    },\n  },\n});\nexport default roomStyles;\n","import React, { Component } from \"react\";\n\n// Material UI components\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\nimport Accordion from \"@material-ui/core/Accordion\";\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\n// Utility components, functions, constants, objects...\nimport { UserInfoContext } from \"../utilities/components/UserInfoProvider\";\nimport roomStyles from \"./room_styles\";\n\nclass Room extends Component {\n  constructor(props) {\n    super(props);\n\n    this.renderRoomType = this.renderRoomType.bind(this);\n  }\n\n  // User information\n  static contextType = UserInfoContext;\n\n  // Render room types based on initial acquired from database\n  renderRoomType(roomTypeKeyWord) {\n    switch (roomTypeKeyWord) {\n      case \"OTA\":\n        return \"Open to All\";\n      case \"IO\":\n        return \"Invite only\";\n      default:\n        return \"unrecognized room type\";\n    }\n  }\n\n  // Copy room url to clipboard\n  copyRoomUrl = (databaseId) => {\n    const roomInput = document.getElementById(`room-data-base${databaseId}`);\n    roomInput.select();\n    document.execCommand(\"copy\");\n    this.props.printFeedback({ type: \"success\", feedbackMsg: \"Link copied\" });\n  };\n\n  render() {\n    const {\n      apiData: { id, title, description, typeOf, createdOn, roomId, user },\n      classes,\n      deleteRoom,\n      enterRoom,\n    } = this.props;\n    const { userId } = this.context;\n    return (\n      <Accordion>\n        {/* Head */}\n        <AccordionSummary expandIcon={<ExpandMoreIcon />}>\n          <Typography className={classes.heading}>{title}</Typography>\n          <Typography className={classes.secondaryHeading}>\n            {this.renderRoomType(typeOf)}\n          </Typography>\n        </AccordionSummary>\n\n        {/* Description */}\n        <AccordionDetails>\n          <div className={classes.gridContainer}>\n            <div className={classes.gridItemA}>\n              <Typography\n                style={{ fontWeight: \"bolder\" }}\n                gutterBottom\n                variant=\"h5\"\n              >\n                {title}\n              </Typography>\n              <Typography variant=\"caption\" style={{ color: \"gray\" }}>\n                created on {createdOn}\n              </Typography>\n              <Typography variant=\"body1\">{description}</Typography>\n            </div>\n\n            <div className={classes.gridItemB}>\n              <ButtonGroup\n                fullWidth\n                size=\"small\"\n                orientation=\"vertical\"\n                variant=\"contained\"\n              >\n                {/* Delete button is only shown if the room belongs to current user */}\n                {userId === user ? (\n                  <Button\n                    style={{ transition: \"0.5s\" }}\n                    color=\"secondary\"\n                    onClick={() => deleteRoom(id)}\n                  >\n                    Delete Room\n                  </Button>\n                ) : null}\n\n                {/* 'Invite Only' type have there enter button not shown */}\n                {typeOf !== \"IO\" ? (\n                  <Button\n                    className={classes.enterBtn}\n                    onClick={() => enterRoom(roomId)}\n                    color=\"primary\"\n                  >\n                    Enter Room\n                  </Button>\n                ) : userId === user ? (\n                  <Button\n                    className={classes.enterBtn}\n                    onClick={() => enterRoom(roomId)}\n                    color=\"primary\"\n                  >\n                    Enter Room\n                  </Button>\n                ) : null}\n              </ButtonGroup>\n            </div>\n\n            {/* Copy Room Url */}\n            <div className={classes.gridItemC}>\n              {userId === user && typeOf === \"IO\" ? (\n                <>\n                  <TextField\n                    variant=\"outlined\"\n                    fullWidth\n                    size=\"small\"\n                    id={`room-data-base${id}`}\n                    defaultValue={window.location.origin + `/video/${roomId}`}\n                  />\n                  <Button\n                    style={{ transition: \"0.5s\" }}\n                    fullWidth\n                    color=\"secondary\"\n                    size=\"small\"\n                    onClick={() => this.copyRoomUrl(id)}\n                  >\n                    Copy room link\n                  </Button>\n                </>\n              ) : null}\n            </div>\n          </div>\n        </AccordionDetails>\n      </Accordion>\n    );\n  }\n}\nexport default withStyles(roomStyles)(Room);\n","// Custom form styles\nconst createRoomFormStyles = (theme) => ({\n  formPaper: {\n    padding: \"2rem\",\n    position: \"absolute\",\n    top: \"50%\",\n    left: \"50%\",\n    transform: \"translate(-50%, -50%)\",\n    width: \"80%\",\n    [theme.breakpoints.up(\"md\")]: { width: \"40%\" },\n  },\n  createRoomBtn: {\n    margin: \"1rem 0\",\n    color: \"#fff\",\n    \"background-image\":\n      \"linear-gradient(to right, rgba(46,49,146,1) 13%, rgba(27,255,255,1) 96%)\",\n\n    transition: \"0.5s\",\n    \"background-size\": \" 200% auto\",\n\n    \"&:hover\": {\n      \"background-position\": \"right center\",\n    },\n    \"&:disabled\": {\n      background: \"#829baf\",\n      color: \"#e3f2fd\",\n    },\n  },\n});\nexport default createRoomFormStyles;\n","import React, { Component } from \"react\";\nimport { Formik, Form } from \"formik\";\n\n// Material UI components\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\n// Utility components, functions, constants, objects...\nimport {\n  roomFormValidationSchema,\n  FormikUIField,\n  FormikUISelect,\n  UserInfoContext,\n} from \"../../utilities\";\nimport createRoomFormStyles from \"./create_room_form_styles\";\n\nclass CreateRoomForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.roomTypes = [\n      {\n        value: \"OTA\",\n        label: \"Open to all\",\n      },\n      {\n        value: \"IO\",\n        label: \"Invite only\",\n      },\n    ];\n  }\n  static contextType = UserInfoContext;\n  render() {\n    const { userId } = this.context;\n\n    // Instantiating form fields with pretty much empty values\n    let initialValues = {\n      user: userId,\n      title: \"\",\n      description: \"\",\n      typeOf: \"OTA\",\n    };\n\n    const { classes, onRoomFormSubmit } = this.props;\n\n    return (\n      <Paper className={classes.formPaper} elevation={3}>\n        <Formik\n          initialValues={initialValues}\n          onSubmit={onRoomFormSubmit}\n          validationSchema={roomFormValidationSchema}\n        >\n          {({ isValid, dirty, errors, touched }) => (\n            <Form>\n              <Typography align=\"center\" variant=\"h4\">\n                New Room\n              </Typography>\n\n              {/* Title */}\n              <FormikUIField\n                name=\"title\"\n                label=\"Title\"\n                type=\"text\"\n                required\n                fullWidth\n                error={errors.title}\n              />\n\n              {/* Description */}\n              <FormikUIField\n                name=\"description\"\n                label=\"Event description\"\n                type=\"text\"\n                fullWidth\n                error={errors.description}\n                multiline\n                rows={4}\n              />\n\n              {/* Room type */}\n              <FormikUISelect\n                name=\"typeOf\"\n                label=\"Room type\"\n                items={this.roomTypes}\n                error={errors.typeOf || touched.typeOf}\n                required\n              />\n\n              <Button\n                fullWidth\n                disabled={!dirty || !isValid}\n                className={classes.createRoomBtn}\n                variant=\"contained\"\n                type=\"submit\"\n              >\n                Create Room\n              </Button>\n            </Form>\n          )}\n        </Formik>\n      </Paper>\n    );\n  }\n}\nexport default withStyles(createRoomFormStyles)(CreateRoomForm);\n","import React, { Component } from \"react\";\n\n// Material UI components\nimport Modal from \"@material-ui/core/Modal\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport Typography from \"@material-ui/core/Typography\";\n\n// Components\nimport Room from \"./Room\";\nimport CreateRoomForm from \"./RoomForm/CreateRoomForm\";\n\n// Utility components, functions, constants, objects...\nimport {\n  axiosInstance,\n  Loading,\n  refreshingAccessToken,\n  UserInfoContext, RouterUILink\n} from \"../utilities/\";\n\nclass RoomList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.deleteRoom = this.deleteRoom.bind(this);\n    this.enterRoom = this.enterRoom.bind(this);\n    this.onRoomFormSubmit = this.onRoomFormSubmit.bind(this);\n  }\n  // User information\n  static contextType = UserInfoContext;\n\n  // Creating Room form\n  onRoomFormSubmit = async (data, { resetForm }) => {\n    const roomData = {\n      user: data.user,\n      title: data.title,\n      description: data.description,\n      typeOf: data.typeOf,\n    };\n    const { printFeedback, closeRoomForm } = this.props;\n\n    // First refreshes JWT access token stored in local storage if access token is invalid\n    await refreshingAccessToken();\n\n    // Then posts the data to backend with the valid access token in the header\n    await axiosInstance\n      .post(\"rooms/\", roomData)\n      .then(() => {\n        // After successfully posting form these tasks are performed in order\n        resetForm();\n        closeRoomForm();\n        printFeedback({ type: \"success\", feedbackMsg: \"Room created\" });\n        this.props.loadRooms();\n      })\n      .catch((error) => {\n        if (error.response) {\n          const { status } = error.response;\n          // Error is feedback is printed to user if user is not logged in\n          if (status === 401 || status === 400) {\n            closeRoomForm();\n            printFeedback({\n              type: \"error\",\n              feedbackMsg: \"You are not logged in.\",\n            });\n          }\n        }\n        console.log(error.message);\n      });\n  };\n\n  // Delete Room\n  deleteRoom = (roomId) => {\n    const { printFeedback } = this.props;\n    axiosInstance\n      .delete(\"rooms/\" + roomId)\n      .then((res) => {\n        // After successfully deleting these tasks are performed in order\n        this.props.loadRooms();\n        printFeedback({ type: \"success\", feedbackMsg: \"Room deleted\" });\n      })\n      .catch((error) => console.log(error.message));\n  };\n\n  // Directs to the video room\n  enterRoom = (roomId) => {\n    const { history } = this.props;\n    history.push(`/video/${roomId}`);\n  };\n\n  componentDidMount() {\n    this.props.loadRooms();\n  }\n\n  render = () => {\n    const {\n      closeRoomForm,\n      isRoomFormOpen,\n      roomListData,\n      loadingRooms,\n      printFeedback,\n    } = this.props;\n\n   \n    const { isUserLoggedIn, isDataArrived } = this.context;\n    return (\n      <>\n      {/* Create Room Form */}\n        <Modal disableAutoFocus open={isRoomFormOpen} onClose={closeRoomForm}>\n          <CreateRoomForm onRoomFormSubmit={this.onRoomFormSubmit} />\n        </Modal>\n\n        {/* User not authentication alert */}\n        {!isUserLoggedIn && isDataArrived ? (\n          <div style={{ textAlign: \"center\", margin: \"1rem 0\" }}>\n            <Typography> Please <RouterUILink linkTo=\"/login\" innerText=\"Login\" /> Or <RouterUILink linkTo=\"/register\" innerText=\"Register\" /> to create or enter room</Typography>\n          </div>\n        ) : null}\n\n\n          {/* List of Rooms */}\n        <div style={{ marginTop: \"1rem\" }}>\n          {loadingRooms ? (\n            <Loading />\n          ) : roomListData.length > 0 ? (\n            roomListData.map((data) => {\n              return (\n                <React.Fragment key={data.id}>\n                  <Room\n                    deleteRoom={this.deleteRoom}\n                    enterRoom={this.enterRoom}\n                    apiData={data}\n                    printFeedback={printFeedback}\n                  />\n                </React.Fragment>\n              );\n            })\n          ) : (\n            <Alert severity=\"info\">No Rooms Yet!!</Alert>\n          )}\n        </div>\n      </>\n    );\n  };\n}\nexport default RoomList;\n","import React from \"react\";\nimport { Route } from \"react-router-dom\";\n\nimport RoomList from \"./RoomList\";\n\n// Custom route component to pass extra props to RoomList component\nfunction LobbyRoute(props) {\n  const { lobbyProps, ...restOfProps } = props;\n  return (\n    <Route\n      {...restOfProps}\n      render={(routerProps) => <RoomList {...lobbyProps} {...routerProps} />}\n    />\n  );\n}\n\nexport default LobbyRoute;\n","import { fade } from \"@material-ui/core/styles/colorManipulator\";\n\n// Custom styling for navigation bar\nconst navigationBarStyles = (theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  appBar: {\n    background:\n      \"linear-gradient(10deg, rgba(46,49,146,1) 13%, rgba(27,255,255,1) 96%)\",\n  },\n  pageTitle: {\n    marginRight: theme.spacing(2),\n  },\n\n  search: {\n    position: \"relative\",\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    \"&:hover\": {\n      backgroundColor: fade(theme.palette.common.white, 0.25),\n    },\n    marginRight: theme.spacing(2),\n    marginLeft: 0,\n    width: \"100%\",\n    [theme.breakpoints.up(\"sm\")]: {\n      marginLeft: theme.spacing(3),\n      width: \"auto\",\n    },\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: \"100%\",\n    position: \"absolute\",\n    pointerEvents: \"none\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  inputRoot: {\n    color: \"inherit\",\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create(\"width\"),\n    width: \"100%\",\n    [theme.breakpoints.up(\"md\")]: {\n      width: \"20ch\",\n    },\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  username: {\n    marginRight: theme.spacing(2),\n    marginLeft: theme.spacing(1),\n    display: \"none\",\n    [theme.breakpoints.up(\"sm\")]: {\n      display: \"block\",\n    },\n  },\n});\nexport default navigationBarStyles;\n","import React, { Component } from \"react\";\nimport { withRouter } from \"react-router\";\n\n// Material UI components\nimport { withStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Menu from \"@material-ui/core/Menu\";\nimport InputBase from \"@material-ui/core/InputBase\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport AddCircleOutlineIcon from \"@material-ui/icons/AddCircleOutline\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\n\n// Utility components, functions, constants, objects...\nimport {\n  UserInfoContext,\n  AVAILABLE_PATHS,\n  ALL_PATH_TITLES,\n} from \"../utilities\";\nimport navigationBarStyles from \"./navigation_bar_styles\";\n\nclass NavigationBar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      anchorEl: null,\n      pageTitle: this.changePageTitle(),\n      isComponentShown: false,\n    };\n  }\n\n  // Title changes based on what url path user is on\n  changePageTitle = () => {\n    const currentUrlPath = this.props.location.pathname;\n    const { LOBBY_PATH, LOGIN_PATH, REGISTER_PATH } = AVAILABLE_PATHS;\n\n    const { LOBBY_TITLE, LOGIN_TITLE, REGISTER_TITLE } = ALL_PATH_TITLES;\n\n    let pageTitle;\n    switch (currentUrlPath) {\n      case LOBBY_PATH:\n        pageTitle = LOBBY_TITLE;\n        break;\n      case LOGIN_PATH:\n        pageTitle = LOGIN_TITLE;\n        break;\n      case REGISTER_PATH:\n        pageTitle = REGISTER_TITLE;\n        break;\n      default:\n        pageTitle = \"404\";\n        break;\n    }\n\n    if (currentUrlPath.match(\"/video/\")) {\n      pageTitle = \"Room\";\n    }\n    this.setState({\n      pageTitle: pageTitle,\n    });\n    return pageTitle;\n  };\n\n  static contextType = UserInfoContext;\n\n  // Method to open menu items\n  handleMenuOpen = (event) => {\n    this.setState({\n      anchorEl: event.currentTarget,\n    });\n  };\n\n  // Logic to handle each menu item's action\n  menuAction = (event) => {\n    const { history, authenticateUser, printFeedback } = this.props;\n    const { menu } = event.currentTarget.dataset;\n    const { LOBBY_PATH, LOGIN_PATH, REGISTER_PATH } = AVAILABLE_PATHS;\n    const {\n      LOBBY_TITLE,\n      LOGIN_TITLE,\n      REGISTER_TITLE,\n      LOGOUT_TITLE,\n    } = ALL_PATH_TITLES;\n    if (menu && history) {\n      switch (menu) {\n        case LOBBY_TITLE:\n          history.push(LOBBY_PATH);\n          break;\n        case LOGIN_TITLE:\n          history.push(LOGIN_PATH);\n          break;\n        case REGISTER_TITLE:\n          history.push(REGISTER_PATH);\n          break;\n        case LOGOUT_TITLE:\n          localStorage.removeItem(\"access_token\");\n          localStorage.removeItem(\"refresh_token\");\n          authenticateUser();\n          printFeedback({\n            type: \"success\",\n            feedbackMsg: \"Logged out successfully\",\n          });\n          history.push(LOBBY_PATH);\n\n          break;\n        default:\n          break;\n      }\n    }\n    this.setState({\n      anchorEl: null,\n    });\n  };\n\n  // Method to hide 'Search bar' and 'create room button' if url is not the default route\n  showComponents = () => {\n    this.changePageTitle();\n    if (this.props.location.pathname !== \"/\") {\n      this.setState({\n        isComponentShown: false,\n      });\n    } else {\n      this.setState({\n        isComponentShown: true,\n      });\n    }\n  };\n\n  // This method fires when the component mounts\n  componentDidMount = () => {\n    this.showComponents();\n  };\n\n  // And if the route is changed\n  componentDidUpdate(prevProps) {\n    if (this.props.location !== prevProps.location) {\n      this.showComponents();\n      this.changePageTitle();\n    }\n  }\n\n  render() {\n    const { classes, openRoomForm, search, handleSearchChanges } = this.props;\n    const { anchorEl, pageTitle, isComponentShown } = this.state;\n    const { userFullName, isUserLoggedIn } = this.context;\n    const {\n      LOBBY_TITLE,\n      LOGIN_TITLE,\n      REGISTER_TITLE,\n      LOGOUT_TITLE,\n    } = ALL_PATH_TITLES;\n\n    // Menu items changes based on whether user is logged in or not\n    const menuItems = isUserLoggedIn\n      ? [LOBBY_TITLE, LOGOUT_TITLE]\n      : [LOBBY_TITLE, LOGIN_TITLE, REGISTER_TITLE];\n    return (\n      <div className={classes.root}>\n        <AppBar className={classes.appBar} position=\"static\">\n          <Toolbar>\n            {/* Page Title */}\n            <Typography className={classes.pageTitle} variant=\"h6\">\n              {pageTitle}\n            </Typography>\n\n            {/* Search Bar */}\n            {isComponentShown ? (\n              <div className={classes.search}>\n                <div className={classes.searchIcon}>\n                  <SearchIcon />\n                </div>\n                <InputBase\n                  value={search}\n                  onChange={handleSearchChanges}\n                  placeholder=\"Search room title…\"\n                  classes={{\n                    root: classes.inputRoot,\n                    input: classes.inputInput,\n                  }}\n                />\n              </div>\n            ) : null}\n\n            {/* Create room button */}\n            <div className={classes.root} />\n            {isComponentShown ? (\n              <Tooltip title=\"Create Room\">\n                <IconButton onClick={openRoomForm} color=\"inherit\">\n                  <AddCircleOutlineIcon />\n                </IconButton>\n              </Tooltip>\n            ) : null}\n\n            {/* User full name */}\n            <Typography className={classes.username} variant=\"subtitle1\">\n              {userFullName && userFullName !== \"\" ? userFullName : \"Anonymous\"}\n            </Typography>\n\n            {/* Menus */}\n            <Tooltip title=\"Menu\">\n              <IconButton\n                onClick={this.handleMenuOpen}\n                edge=\"start\"\n                color=\"inherit\"\n              >\n                <MenuIcon />\n              </IconButton>\n            </Tooltip>\n            <Menu\n              anchorEl={anchorEl}\n              anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n              transformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n              keepMounted\n              open={Boolean(anchorEl)}\n              onClose={this.menuAction}\n            >\n              {menuItems.map((items, index) => (\n                <MenuItem\n                  key={index}\n                  data-menu={items}\n                  onClick={this.menuAction}\n                >\n                  {items}\n                </MenuItem>\n              ))}\n            </Menu>\n          </Toolbar>\n        </AppBar>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(withStyles(navigationBarStyles)(NavigationBar));\n","// Custom Video styling\nconst videoRoomStyles = (theme) => ({\n  floatingButtons: {\n    zIndex: 1,\n    position: \"fixed\",\n    bottom: 0,\n    left: \"50%\",\n    transform: \"translate(-50%, -50%)\",\n  },\n  floatingButton: {\n    margin: \"0 0.5rem\",\n  },\n  videoGrid: {\n    marginTop: \"1rem\",\n    marginBottom: \"15rem\",\n\n    width: \"100%\",\n    display: \"grid\",\n    \"grid-template-columns\": \"repeat(2, 1fr)\",\n    \"grid-template-rows\": \"auto\",\n    gap: \"0.3rem\",\n    [theme.breakpoints.up(\"md\")]: {\n      marginBottom: \"20rem\",\n      \"grid-template-columns\": \"repeat(4, 1fr)\",\n    },\n  },\n\n  remoteVideoDiv: {\n    overflow: \"hidden\",\n    borderRadius: \"0.5rem\",\n    background: \"gray\",\n    position: \"relative\",\n  },\n  localVideoDiv: {\n    zIndex: 2,\n    borderRadius: \"0.5rem\",\n    position: \"fixed\",\n    bottom: 40,\n    left: \"50%\",\n    transform: \"translate(-50%, -50%)\",\n    width: \"150px\",\n    height: \"100px\",\n    background: \"black\",\n    [theme.breakpoints.up(\"md\")]: {\n      bottom: 30,\n      width: \"200px\",\n      height: \"150px\",\n    },\n  },\n  video: {\n    borderRadius: \"0.5rem\",\n    objectFit: \"cover\",\n    width: \"100%\",\n    height: \"100%\",\n  },\n\n  userDetail: {\n    textAlign: \"center\",\n    width: \"100%\",\n    borderRadius: \"0.5rem\",\n    transition: \"0.3s\",\n    position: \"absolute\",\n    background: \"rgba(177, 202, 248, 0.459)\",\n    padding: \"0.3rem 1rem\",\n    bottom: -20,\n    left: \"50%\",\n    transform: \"translate(-50%, -50%)\",\n  },\n\n  alert: {\n    marginTop: \"1rem\",\n  },\n});\nexport default videoRoomStyles;\n","import React, { Component } from \"react\";\n\n// Material UI components\nimport Typography from \"@material-ui/core/Typography\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\n// Utility components, functions, constants, objects...\nimport videoRoomStyles from \"./video_room_styles\";\n\nexport class Video extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isMouseHovering: false,\n    };\n  }\n\n// These Hover method is just for style purposes\n  mouseHoverIn = () => {\n    this.setState({\n      isMouseHovering: true,\n    });\n  };\n  mouseHoverOut = () => {\n    this.setState({\n      isMouseHovering: false,\n    });\n  };\n  componentDidMount = () => {\n    // remote stream is added to video tags\n    const { peer, user_id } = this.props;\n    if (peer && user_id) {\n      peer.on(\"stream\", (stream) => {\n        document.getElementById(`remote-${user_id}`).srcObject = stream;\n      });\n    }\n  };\n\n  render() {\n    const { user_full_name, id, classes, isLocalUser } = this.props;\n\n    // Style is changed if stream is local or remote\n    let videoDivClass;\n    let style;\n    if (isLocalUser) {\n      videoDivClass = classes.localVideoDiv;\n    } else {\n      videoDivClass = classes.remoteVideoDiv;\n\n      if (this.state.isMouseHovering) {\n        style = { opacity: 1 };\n      } else {\n        style = { opacity: 0 };\n      }\n    }\n\n    return (\n      <div\n        onMouseOver={this.mouseHoverIn}\n        onMouseOut={this.mouseHoverOut}\n        className={videoDivClass}\n      >\n        <video\n          className={classes.video}\n          id={id}\n          autoPlay\n          muted={isLocalUser}\n        ></video>\n\n        {!isLocalUser ? (\n          <div style={style} className={classes.userDetail}>\n            <Typography variant=\"overline\">\n              {user_full_name ? user_full_name : \"Anonymous\"}\n            </Typography>\n          </div>\n        ) : null}\n      </div>\n    );\n  }\n}\n\nexport default withStyles(videoRoomStyles)(Video);\n","import React, { Component } from \"react\";\nimport Peer from \"simple-peer\";\n\n// Material UI components\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Fab from \"@material-ui/core/Fab\";\nimport VolumeUpRoundedIcon from \"@material-ui/icons/VolumeUpRounded\";\nimport VolumeOffRoundedIcon from \"@material-ui/icons/VolumeOffRounded\";\nimport VideocamRoundedIcon from \"@material-ui/icons/VideocamRounded\";\nimport VideocamOffRoundedIcon from \"@material-ui/icons/VideocamOffRounded\";\nimport ExitToAppRoundedIcon from \"@material-ui/icons/ExitToAppRounded\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Alert from \"@material-ui/lab/Alert\";\n\n// Components\nimport Video from \"./Video\";\n\n// Utility components, functions, constants, objects...\nimport { UserInfoContext, webSocketUrl, AVAILABLE_PATHS } from \"../utilities\";\nimport videoRoomStyles from \"./video_room_styles\";\n\nexport class VideoRoom extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      websocket: null,\n      stream: null,\n      usersConnected: [],\n      peersEstablished: [],\n\n      isVideoMuted: false,\n      isAudioMuted: false,\n      contentLoading: true,\n\n      isVideoRoomAccessible: true,\n    };\n  }\n\n  muteVideo = () => {\n    const stream = document.getElementById(\"localVideo\").srcObject;\n    if (!stream.getVideoTracks()[0]) return;\n    stream.getVideoTracks()[0].enabled = !stream.getVideoTracks()[0].enabled;\n    this.setState({\n      isVideoMuted: !stream.getVideoTracks()[0].enabled,\n    });\n  };\n  muteAudio = () => {\n    const stream = document.getElementById(\"localVideo\").srcObject;\n    if (!stream.getAudioTracks()[0]) return;\n    stream.getAudioTracks()[0].enabled = !stream.getAudioTracks()[0].enabled;\n    this.setState({\n      isAudioMuted: !stream.getAudioTracks()[0].enabled,\n    });\n  };\n  leaveRoom = () => {\n    const { history } = this.props;\n    history.push(AVAILABLE_PATHS.LOBBY_PATH);\n  };\n\n  // Creates offer to send it to other user in the room\n  CreatePeer = (currentUserId, otherUserId, currentUserStream = null) => {\n\n    // User creates peer as initiator\n    const peer = new Peer({\n      initiator: true,\n      trickle: false,\n      stream: currentUserStream,\n    });\n\n    // Offer is sent\n    peer.on(\"signal\", (signal) => {\n      this.state.websocket.send(\n        JSON.stringify({\n          type: \"sending_offer\",\n          from: currentUserId,\n          to: otherUserId,\n          offer: signal,\n        })\n      );\n    });\n\n    // Peer is then returned\n    return peer;\n  };\n\n  // Creates answer in response to the offer received\n  addPeer = (\n    currentUserId,\n    otherUserId,\n    receivedOffer,\n    currentUserStream = null\n  ) => {\n\n    // User creates peer but not as an initiator \n    const peer = new Peer({\n      initiator: false,\n      trickle: false,\n      stream: currentUserStream,\n    });\n\n\n    // The offer that was sent is set as remote description\n    peer.signal(receivedOffer);\n\n    // Answer is sent back to the user who sent the offer\n    peer.on(\"signal\", (signal) => {\n      this.state.websocket.send(\n        JSON.stringify({\n          type: \"sending_answer\",\n          from: currentUserId,\n          to: otherUserId,\n          answer: signal,\n        })\n      );\n    });\n\n     // Peer is then returned\n    return peer;\n  };\n\n  // Function to send offers to each users as initiator that are connected to the room\n  sendSignalsToAll = (currentUserId, stream = null) => {\n    const peers = [];\n    this.state.usersConnected.forEach((otherUser) => {\n      if (otherUser.user_id !== currentUserId) {\n        const peer = this.CreatePeer(currentUserId, otherUser.user_id, stream);\n        peers.push({\n          user_id: otherUser.user_id,\n          user_full_name: otherUser.user_full_name,\n          peer: peer,\n        });\n      }\n    });\n\n    this.setState({\n      peersEstablished: peers,\n    });\n  };\n\n  componentDidMount = () => {\n    const {\n      printFeedback,\n      match: { params },\n    } = this.props;\n\n    // Checks whether 'navigator.mediaDevices' is available for this browser or not\n    if (!navigator.mediaDevices) {\n      this.setState({ isVideoRoomAccessible: false });\n      printFeedback({\n        type: \"error\",\n        feedbackMsg:\n          \"this video room is not accessible because the site is not running on secure protocol, i.e. 'HTTPS'\",\n      });\n      return;\n    }\n    // Extracting current user info\n    const { userId, userFullName } = this.context;\n\n    // Websocket connection is made\n    const websocket = new WebSocket(webSocketUrl() + `${params.roomId}/`);\n    this.setState({\n      websocket: websocket,\n    });\n\n    websocket.onopen = () => {\n      this.setState({\n        contentLoading: true,\n      });\n\n      // Send all users in the room new user joined\n      websocket.send(\n        JSON.stringify({\n          type: \"new_user_joined\",\n          from: userId,\n          user_full_name: userFullName,\n          token: localStorage.getItem(\"access_token\"),\n        })\n      );\n    };\n\n    websocket.onmessage = (payload) => {\n      // Message from backend\n      const data = JSON.parse(payload.data);\n\n      switch (data.type) {\n        case \"new_user_joined\":\n          this.setState({\n            usersConnected: data.users_connected,\n          });\n\n          // If user joined is current user, the user is requested to enable the media devices and offer is created and sent to other user\n          if (userId === data.from) {\n            navigator.mediaDevices\n              .getUserMedia({\n                video: true,\n                audio: true,\n              })\n              .then((stream) => {\n                this.setState({ stream: stream });\n                document.getElementById(\"localVideo\").srcObject = stream;\n                this.sendSignalsToAll(userId, stream);\n              })\n              .catch((error) => {\n                this.setState({ isVideoRoomAccessible: false });\n                printFeedback({\n                  type: \"error\",\n                  feedbackMsg:\n                    \"you need to enable media devices inorder to use access this room\",\n                });\n                console.log(error.message);\n                return;\n              });\n          }\n\n          // Message is send to other user that new user joined\n          if (userId !== data.from) {\n            const user = this.state.usersConnected.find(\n              (eachUser) => eachUser.user_id === data.from\n            );\n            printFeedback({\n              type: \"success\",\n              feedbackMsg: `${user.user_full_name} joined this room`,\n            });\n            console.log(`User No. ${data.from} joined this room`);\n          }\n          break;\n\n        // Offer is received here by others who then store it in there state and sends the answer\n        case \"sending_offer\":\n          if (data.to === userId) {\n            console.log(\"offer_received\");\n            const peer = this.addPeer(\n              userId,\n              data.from,\n              data.offer,\n              this.state.stream\n            );\n            this.setState(({ peersEstablished }) => {\n              const user = this.state.usersConnected.find(\n                (eachUser) => eachUser.user_id === data.from\n              );\n              let newPeersList = [\n                ...peersEstablished,\n                {\n                  user_id: data.from,\n                  user_full_name: user.user_full_name,\n                  peer: peer,\n                },\n              ];\n\n              // Checks whether the peer with same user id exists in the 'peersEstablished' state, that peer is then removed\n              const userPeer = this.state.peersEstablished.find(\n                (eachUser) => eachUser.user_id === data.from\n              );\n              if (userPeer) {\n                const newList = this.state.peersEstablished.filter(\n                  (peer) => userPeer.user_id !== peer.user_id\n                );\n\n                newPeersList = [\n                  ...newList,\n                  {\n                    user_id: data.from,\n                    user_full_name: user.user_full_name,\n                    peer: peer,\n                  },\n                ];\n              }\n\n              return {\n                peersEstablished: newPeersList,\n              };\n            });\n          }\n          break;\n\n        // Answer is received here by the user who just joined\n        case \"sending_answer\":\n          if (data.to === userId) {\n            console.log(\"answer_received\");\n            const userPeer = this.state.peersEstablished.find(\n              (eachUser) => eachUser.user_id === data.from\n            );\n\n            // Answer is set as remote description\n            userPeer.peer.signal(data.answer);\n          }\n\n          break;\n        case \"disconnected\":\n          if (data.from !== userId) {\n            const user = this.state.usersConnected.find(\n              (eachUser) => eachUser.user_id === data.from\n            );\n\n            // Feedback is sent to users about who just disconnected\n            if (user) {\n              console.log(`User No. ${data.from} disconnected`);\n              printFeedback({\n                type: \"error\",\n                feedbackMsg: `${user.user_full_name} left`,\n              });\n\n              // Peer associated with the user that just disconnected is destroyed\n              const userPeer = this.state.peersEstablished.find(\n                (eachUser) => eachUser.user_id === data.from\n              );\n              if (userPeer) {\n                userPeer.peer.destroy();\n                const newPeersList = this.state.peersEstablished.filter(\n                  (peer) => userPeer.user_id !== peer.user_id\n                );\n                this.setState({ peersEstablished: newPeersList });\n              }\n            }\n          }\n          break;\n        default:\n          break;\n      }\n    };\n  };\n\n  componentWillUnmount = () => {\n    // Websocket is closed\n    const { websocket, peersEstablished, stream } = this.state;\n    if (websocket) {\n      this.state.websocket.close();\n    }\n\n    // All peers is destroyed\n    peersEstablished.forEach(({ peer }) => {\n      peer.destroy();\n    });\n\n    // Streams are stopped\n    if (stream) {\n      stream.getTracks().forEach((track) => {\n        track.stop();\n      });\n    }\n\n    // All state is cleared\n    this.setState({\n      websocket: null,\n      stream: null,\n      usersConnected: [],\n      peersEstablished: [],\n\n      isVideoMuted: true,\n      isAudioMuted: true,\n    });\n  };\n\n  static contextType = UserInfoContext;\n  render() {\n    const {\n      isVideoRoomAccessible,\n      isVideoMuted,\n      isAudioMuted,\n      peersEstablished,\n    } = this.state;\n\n    const { userFullName } = this.context;\n    const { classes } = this.props;\n    return (\n      <div>\n        {isVideoRoomAccessible ? (\n          <>\n            {/* Action Buttons */}\n            <div className={classes.floatingButtons}>\n              {/* Video Mute/Unmute */}\n              <Tooltip title=\"Video ON/OFF\">\n                <Fab\n                  className={classes.floatingButton}\n                  onClick={this.muteVideo}\n                  color=\"inherit\"\n                >\n                  {isVideoMuted ? (\n                    <VideocamOffRoundedIcon />\n                  ) : (\n                    <VideocamRoundedIcon />\n                  )}\n                </Fab>\n              </Tooltip>\n\n              {/* Audio Mute/Unmute */}\n              <Tooltip title=\"Audio ON/OFF\">\n                <Fab\n                  className={classes.floatingButton}\n                  onClick={this.muteAudio}\n                  color=\"inherit\"\n                >\n                  {isAudioMuted ? (\n                    <VolumeOffRoundedIcon />\n                  ) : (\n                    <VolumeUpRoundedIcon />\n                  )}\n                </Fab>\n              </Tooltip>\n\n              {/* Leave Room */}\n              <Tooltip title=\"Leave Room\">\n                <Fab\n                  onClick={this.leaveRoom}\n                  className={classes.floatingButton}\n                  color=\"secondary\"\n                >\n                  <ExitToAppRoundedIcon />\n                </Fab>\n              </Tooltip>\n            </div>\n\n            {/* Locale Video */}\n            <Video isLocalUser id=\"localVideo\" user_full_name={userFullName} />\n\n            {/* Remote Videos */}\n            <div className={classes.videoGrid}>\n              {peersEstablished.length > 0 ? (\n                peersEstablished.map((userPeer, index) => (\n                  <Video\n                    key={index}\n                    id={`remote-${userPeer.user_id}`}\n                    user_id={userPeer.user_id}\n                    user_full_name={userPeer.user_full_name}\n                    peer={userPeer.peer}\n                  />\n                ))\n              ) : (\n                <Alert severity=\"info\">No one joined yet!!</Alert>\n              )}\n            </div>\n          </>\n        ) : (\n          // Error displayed if something goes wrong\n          <Alert className={classes.alert} severity=\"error\">\n            This room is not accessible. Please make sure you enabled your media\n            devices\n          </Alert>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default withStyles(videoRoomStyles)(VideoRoom);\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\n\n// Components\nimport VideoRoom from \"./VideoRoom\";\n\n// Utility components, functions, constants, objects...\nimport { AVAILABLE_PATHS, Loading } from \"../utilities\";\n\n// Custom route for the video room to redirect user if user is not logged in\nfunction VideoRoomRoute(props) {\n  const { userData, printFeedback, ...restOfProps } = props;\n  const { isUserLoggedIn, isDataArrived } = userData;\n  return (\n    <Route\n      {...restOfProps}\n      render={(routerProps) =>\n        isDataArrived && !isUserLoggedIn ? (\n          <Redirect to={AVAILABLE_PATHS.LOGIN_PATH} exact />\n        ) : isDataArrived && isUserLoggedIn ? (\n          <VideoRoom\n            userData={userData}\n            printFeedback={printFeedback}\n            {...routerProps}\n          />\n        ) : (\n          <Loading />\n        )\n      }\n    />\n  );\n}\n\nexport default VideoRoomRoute;\n","import React, { Component } from \"react\";\nimport { HashRouter as Router, Switch } from \"react-router-dom\";\nimport jwt_decode from \"jwt-decode\";\n\n// Components\nimport {\n  Login,\n  Register,\n  AuthenticationRoute,\n  LobbyRoute,\n  NavigationBar,\n  VideoRoomRoute,\n} from \"./components\";\n\n// Utility components, functions, constants, objects...\nimport {\n  Feedback,\n  UserInfoProvider,\n  AVAILABLE_PATHS,\n  axiosInstance,\n  validateToken,\n  refreshingAccessToken,\n  getRoomsList,\n  Loading,\n} from \"./components/utilities\";\n\nexport class Routes extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      // User information\n      userData: {\n        isDataArrived: false,\n        userId: null,\n        userFullName: \"\",\n        isUserLoggedIn: false,\n      },\n      isRoomFormOpen: false,\n\n      // For Feedback method\n      severity: \"\",\n      feedbackMsg: \"\",\n      isFeedbackOpen: false,\n\n      // Related to room list\n      roomListData: [],\n      loadingRooms: true,\n      search: \"\",\n    };\n\n    // Loading list of rooms\n    this.loadRooms = this.loadRooms.bind(this);\n    this.handleSearchChanges = this.handleSearchChanges.bind(this);\n\n    // Opening and closing of form\n    this.closeRoomForm = this.closeRoomForm.bind(this);\n    this.openRoomForm = this.openRoomForm.bind(this);\n\n    // Feedback messages\n    this.printFeedback = this.printFeedback.bind(this);\n    this.closeFeedback = this.closeFeedback.bind(this);\n\n    // User authentication and refreshing access token\n    this.authenticateUser = this.authenticateUser.bind(this);\n  }\n\n  // Method to load all the rooms\n  loadRooms = (search = \"\") => {\n    this.setState({\n      loadingRooms: true,\n    });\n    getRoomsList(axiosInstance, search)\n      .then((res) => {\n        const access_token = localStorage.getItem(\"access_token\");\n        axiosInstance.defaults.headers[\"Authorization\"] =\n          \"Bearer \" + access_token;\n        this.setState(() => ({ roomListData: res.data, loadingRooms: false }));\n      })\n      .catch((error) => {\n        this.setState(() => ({ loadingRooms: false }));\n        this.printFeedback({ type: \"error\", feedbackMsg: error.message });\n        console.log(error.message);\n      });\n  };\n\n  // Method runs whenever search is used\n  handleSearchChanges = async (event) => {\n    await this.setState({\n      search: event.target.value,\n    });\n    await this.loadRooms(this.state.search);\n  };\n\n  closeRoomForm() {\n    this.setState({\n      isRoomFormOpen: false,\n    });\n  }\n  openRoomForm() {\n    this.setState({\n      isRoomFormOpen: true,\n    });\n  }\n\n  // Method for printing feedback to user\n  printFeedback = ({ type, feedbackMsg }) => {\n    switch (type) {\n      case \"success\":\n        this.setState({\n          severity: \"success\",\n          feedbackMsg: feedbackMsg,\n          isFeedbackOpen: true,\n        });\n        break;\n      case \"error\":\n        this.setState({\n          severity: \"error\",\n          feedbackMsg: feedbackMsg,\n          isFeedbackOpen: true,\n        });\n        break;\n      default:\n        break;\n    }\n  };\n\n  // Closing feedback message\n  closeFeedback = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n\n    this.setState({\n      isFeedbackOpen: false,\n    });\n  };\n\n  // Checks whether is logged in or not\n  // Depending upon that userData is populated\n  authenticateUser = () => {\n    const refresh_token = localStorage.getItem(\"refresh_token\");\n\n    // Checks the refresh token is valid which then determines whether user is logged-in or not\n    validateToken(axiosInstance, refresh_token)\n      .then((response) => {\n        if (response.status === 200) {\n          const userId = jwt_decode(refresh_token).user_id;\n          const userFullName = jwt_decode(refresh_token).full_name;\n          this.setState({\n            userData: {\n              isDataArrived: true,\n              userId: userId,\n              userFullName: userFullName,\n              isUserLoggedIn: true,\n            },\n          });\n\n          // If the refresh token is valid then access token is refreshed\n          refreshingAccessToken();\n        }\n      })\n      .catch((error) => {\n        console.log(error.message);\n        localStorage.removeItem(\"access_token\");\n        localStorage.removeItem(\"refresh_token\");\n        this.setState({\n          userData: {\n            isDataArrived: true,\n            userId: null,\n            userFullName: \"\",\n            isUserLoggedIn: false,\n          },\n        });\n      });\n  };\n\n  componentDidMount = () => {\n    // checks authentication when components mounts\n    this.authenticateUser();\n  };\n  render() {\n    const {\n      LOBBY_PATH,\n      LOGIN_PATH,\n      REGISTER_PATH,\n      VIDEO_ROOM_PATH,\n    } = AVAILABLE_PATHS;\n    const {\n      userData,\n      isRoomFormOpen,\n      roomListData,\n      loadingRooms,\n      search,\n      severity,\n      feedbackMsg,\n      isFeedbackOpen,\n    } = this.state;\n\n    const authenticationProps = {\n      isUserLoggedIn: userData.isUserLoggedIn,\n      printFeedback: this.printFeedback,\n      authenticateUser: this.authenticateUser,\n    };\n    const lobbyProps = {\n      userData: userData,\n      loadingRooms: loadingRooms,\n      roomListData: roomListData,\n      loadRooms: this.loadRooms,\n      printFeedback: this.printFeedback,\n      closeRoomForm: this.closeRoomForm,\n      isRoomFormOpen: isRoomFormOpen,\n    };\n    const navProps = {\n      search: search,\n      handleSearchChanges: this.handleSearchChanges,\n      authenticateUser: this.authenticateUser,\n      openRoomForm: this.openRoomForm,\n      printFeedback: this.printFeedback,\n    };\n\n    return userData.isDataArrived ? (\n      <UserInfoProvider userData={userData}>\n        <Router basename=\"/app\">\n          {/* Nav */}\n          <NavigationBar {...navProps} />\n          <Feedback\n            closeFeedback={this.closeFeedback}\n            isFeedbackOpen={isFeedbackOpen}\n            severity={severity}\n            feedbackMsg={feedbackMsg}\n          />\n          <Switch>\n            {/* Lobby */}\n            <LobbyRoute exact path={LOBBY_PATH} lobbyProps={lobbyProps} />\n\n            {/* Login */}\n            <AuthenticationRoute\n              exact\n              path={LOGIN_PATH}\n              component={Login}\n              authenticationProps={authenticationProps}\n            />\n            {/* Register */}\n            <AuthenticationRoute\n              exact\n              path={REGISTER_PATH}\n              component={Register}\n              authenticationProps={authenticationProps}\n            />\n\n            {/* Video Room */}\n            <VideoRoomRoute\n              exact\n              path={VIDEO_ROOM_PATH}\n              userData={userData}\n              printFeedback={this.printFeedback}\n            />\n          </Switch>\n        </Router>\n      </UserInfoProvider>\n    ) : (\n      <Loading />\n    );\n  }\n}\n\nexport default Routes;\n","import React from \"react\";\n\nimport \"fontsource-roboto\";\nimport Routes from \"./Routes\";\nimport Container from \"@material-ui/core/Container\";\n\nclass App extends React.Component {\n  render() {\n    return (\n      <Container>\n        <Routes />\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}